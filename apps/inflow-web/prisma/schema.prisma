generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model AuthenticationProvider {
  id         String @id @default(uuid()) @db.Uuid
  name       String
  providerId String

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  email        String   @unique
  name         String   @unique
  displayName  String?
  avatar       String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  lastActiveAt DateTime?

  authenticationProviders AuthenticationProvider[]

  threads Thread[]
}

model Thread {
  id        String   @id @default(uuid()) @db.Uuid
  title     String
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String  @db.Uuid
  user   User    @relation(fields: [userId], references: [id])

  preview Json?
  messages ChatMessage[]
}

model ChatMessage {
  id        String   @id @default(uuid()) @db.Uuid

  role      String
  parts   Json // Can store either string or structured JSON data

  providerOptions Json?

  threadId String  @db.Uuid
  thread   Thread @relation(fields: [threadId], references: [id])

  createdAt DateTime @default(now())
}